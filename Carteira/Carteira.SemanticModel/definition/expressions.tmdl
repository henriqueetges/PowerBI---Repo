expression 'Erros em F - Historical Prices' =
		let
		Fonte = #"F - Historical Prices",
		  #"Incompatibilidades de Tipo Detectadas" = let
		    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Fonte, Table.ColumnsOfType(Fonte, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),
		    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),
		    fieldNames = Record.FieldNames(recordTypeFields),
		    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),
		    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = "O tipo do valor não corresponde ao tipo da coluna.", Detail = v], fieldTypes{i}})
		in
		    Table.TransformColumns(Fonte, pairs),
		    #"Erros Substituídos" = Table.ReplaceErrorValues(#"Incompatibilidades de Tipo Detectadas", {{"volume", 0}}),
		  #"Índice Adicionado" = Table.AddIndexColumn(#"Erros Substituídos", "Número da Linha" ,1)
		in
		    #"Índice Adicionado"
	lineageTag: 8bda45dc-633b-410e-ab1e-d918560718d2
	queryGroup: 'Erros na Consulta - 03/05/2025 10:32:47'

	annotation PBI_NavigationStepName = Navegação

	annotation PBI_ResultType = Table

